#include "CApplication.h"
#include "CCamera.h"
//OpenGL
#include "glut.h"


//クラスのstatic変数
CMatrix CApplication::mModelViewInverse;
CTexture CApplication::mTexture;

//背景モデルデータの指定
#define MODEL_BACKGROUND "res\\sky.obj","res\\sky.mtl"//背景モデル
#define MODEL_OBJ "res\\f14.obj","res\\f14.mtl"       //プレイヤーモデル
#define MODEL_C5 "res\\c5.obj","res\\c5.mtl"          //敵輸送機モデル
#define SOUND_BGM "res\\mario.wav" //BGM音声ファイル
#define SOUND_OVER "res\\mdai.wav" //ゲームオーバー音声ファイル

//モデルビュー行列の取得
const CMatrix& CApplication::GetModelViewInverse()
{
	return mModelViewInverse;
}

//Textureクラスのインスタンスを取得
CTexture* CApplication::GetTexture()
{
	return &mTexture;
}

CUi* CApplication::spUi = nullptr;

CUi* CApplication::GetUi()
{
	return spUi;//インスタンスのポインタを返す
}

//デストラクタ
CApplication::~CApplication()
{
	delete spUi;//インスタンスUiの削除
}

//初期設定
void CApplication::Init()
{
	//3Dモデルファイル読み込み
	mPlayerModel.Load(MODEL_PLAYER);
	mKnightModel.Load(MODEL_KNIGHT);
	//パラディンのインスタンス作成
	mpPaladin = new CPaladin();
	//敵のアニメーションを抜き出す
	mKnightModel.SeparateAnimationSet(0, 10, 80, "walk");//1:移動
	mKnightModel.SeparateAnimationSet(0, 1530, 1830, "idle1");//2:待機
	mKnightModel.SeparateAnimationSet(0, 10, 80, "walk");//3:ダミー
	mKnightModel.SeparateAnimationSet(0, 10, 80, "walk");//4:ダミー
	mKnightModel.SeparateAnimationSet(0, 10, 80, "walk");//5:ダミー
	mKnightModel.SeparateAnimationSet(0, 10, 80, "walk");//6:ダミー
	mKnightModel.SeparateAnimationSet(0, 440, 520, "attack1");//7:Attack1
	mKnightModel.SeparateAnimationSet(0, 520, 615, "attack2");//8:Attack2
	mKnightModel.SeparateAnimationSet(0, 10, 80, "walk");//9:ダミー
	mKnightModel.SeparateAnimationSet(0, 10, 80, "walk");//10:ダミー
	mKnightModel.SeparateAnimationSet(0, 1160, 1260, "death1");//11:ダウン
	//プレイヤーの初期設定
	mXPlayer.Init(&mPlayerModel);
	//敵の初期設定
	mXEnemy.Init(&mKnightModel);
	//待機アニメーションに変更
	mXEnemy.ChangeAnimation(2, true, 200);
	//攻撃アニメーションに変更
	mpPaladin->ChangeAnimation(1, true, 200);

	//フォントのロード
	mFont.Load("FontG.png", 1, 4096 / 64);
}

void CApplication::Start()
{
	//カメラの設定
	mActionCamera.Set(5.0f, -15.0f, 180.0f);
	//CApplicationのInit()
	Init();
	//敵の配置
	mXEnemy.SetPosition(CVector(7.0f, 0.0f, 0.0f));
	//パラディンの配置
	mpPaladin->SetPosition(CVector(-1.0f, 0.0f, 5.0f));
}

void CApplication::Update()
{	
	//プレイヤーの更新
	mXPlayer.Update();
	//敵の更新
	mXEnemy.Update();
	//パラディンの更新
	mpPaladin->Update();

	//カメラ設定
	mActionCamera.SetPosition(mXPlayer.GetPosition() + CVector(0.0f, 2.0f, 0.0f));
	mActionCamera.Update();
	mActionCamera.Render();
	//モデルビュー行列の取得
	glGetFloatv(GL_MODELVIEW_MATRIX, mModelViewInverse.GetM());
	//逆行列の取得
	mModelViewInverse = mModelViewInverse.GetTranspose();
	mModelViewInverse.M(0, 3, 0);
	mModelViewInverse.M(1, 3, 0);
	mModelViewInverse.M(2, 3, 0);

	//頂点にアニメーションを適用する
	mPlayerModel.AnimateVertex();
	//プレイヤー描画
	mXPlayer.Render();
	//敵描画
	mXEnemy.Render();
	//パラディンの描画
	mpPaladin->Render();
	//コライダの描画
	CCollisionManager::Instance()->Render();
	//衝突処理
	CCollisionManager::Instance()->Collision();


	//2D描画開始
	CCamera::Start(0, 800, 0, 600);

	mFont.Draw(20, 20, 10, 12, "3D PROGRAMING");

	//2Dの描画終了
	CCamera::End();
}

